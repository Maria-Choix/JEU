import time
from tkinter import *
from tkinter import ttk
from math import*

def vie_ennemi(nb_ligne):
    """fonction permettant d'enlever la vie de l'ennemi 1 quand on appuie sur le bouton lancer"""
    global Pv_ennemi1_line,Pv_ennemi2_line,pv_ennemi1,pv_ennemi2,ennemi1, ennemi2
    if nb_ligne==1 :
        pv_ennemi1 -= 25
        canevas.delete(Pv_ennemi1_line)
        if pv_ennemi1 == 0:
            canevas.delete(ennemi1)
            return 0
        Pv_ennemi1_line = canevas.create_line(600, 20, 600 + pv_ennemi1 * 2, 20, fill="red", width=5)
    else :
        pv_ennemi2 -= 25
        canevas.delete(Pv_ennemi2_line)
        if pv_ennemi2 == 0:
            canevas.delete(ennemi2)
            return 0
        Pv_ennemi2_line = canevas.create_line(500,270,500+pv_ennemi2*2,270,fill="red",width=5)

def rotation_fleche(x_fleche,y_fleche):
    global angle,lancer_v
    angle = 0
    while lancer_v != 1 and nb_fleche>0:
        creation_fleche(x_fleche, y_fleche, angle)
        time.sleep(0.001)
        fenetre.update()
        canevas.delete(fleche, pointe_fleche)
        angle += 1
        if pv_ennemi2 == pv_ennemi1 == 0:
            lancer_v=1
            canevas.delete('all')
            fenetre.config(width=500, height=325)
            canevas.config(bg='yellow')
            info.configure(text="Vous avez gagné.", fg='green', bg="yellow", font=('times', 30, 'bold'))
            info.place(x=100, y=150)
    if nb_fleche<=0 :
        canevas.delete('all')
        fenetre.config(width=500, height=325)
        info.configure(text="Vous avez perdu.",fg='black',bg="red", font=('times',30,'bold'))
        info.place(x=100,y=150)
        retour_menu = Button(fenetre, text='Exit',font=("calibri", 20, "normal"), bg="white", fg="red", command=menu)
        retour_menu.place(x=225, y=240)
    if pv_ennemi2==pv_ennemi1==0 :
        canevas.delete('all')
        fenetre.config(width=500, height=325)
        canevas.config(bg='yellow')
        info.configure(text="Vous avez gagné.", fg='green', bg="yellow", font=('times', 30, 'bold'))
        info.place(x=100, y=150)
        retour_menu = Button(fenetre, text='Exit',font=("calibri", 20, "normal"), bg="white", fg="red", command=menu)
        retour_menu.place(x=225,y=240)


def menu():
    fenetre.destroy()
    main()
def creation_fleche(x_fleche,y_fleche,angle):
    """fonction qui crée une fleche et la place a son point de depart sur le joueur"""
    global fleche,pointe_fleche
    fleche=canevas.create_line(x_fleche-60,
                               y_fleche,
                               x_fleche-60+60*cos(radians(angle)),
                               y_fleche+60 * sin(radians(angle)),
                               fill="yellow",width=3)
    pointe_fleche = canevas.create_polygon(x_fleche+50*cos(radians(angle-10))-60,
                                           y_fleche+ 50*sin(radians(angle-10)),
                                           x_fleche+50*cos(radians(angle+10))-60,
                                           y_fleche+50*sin(radians(angle+10)),
                                           x_fleche + 70 * cos(radians(angle))-60,
                                           y_fleche + 70 * sin(radians(angle)), fill="yellow", width=3)


def lancer_niveau1():
    """fonction qui permet de lancer la fleche sur un axe horizontal et qui prepare une nouvelle fleche a lancer"""
    global x_fleche,y_fleche,lancer_v,angle,nb_fleche
    lancer_v=1
    nb_fleche-=1
    while x_fleche<1000 :
        x_fleche+=1*cos(radians(angle))
        y_fleche+=1*sin(radians(angle))
        canevas.move(pointe_fleche, 1*cos(radians(angle)),1*sin(radians(angle)))
        canevas.move(fleche,1*cos(radians(angle)),1*sin(radians(angle)))
        fenetre.update()
        if not (0<canevas.coords(pointe_fleche)[4]<1000) or not(0<canevas.coords(pointe_fleche)[5]<650):
            break
        elif 500<=canevas.coords(pointe_fleche)[4]<=700 and 450<=canevas.coords(pointe_fleche)[5]<=500 :
            break
        elif 600<=canevas.coords(pointe_fleche)[4]<=800 and 200<=canevas.coords(pointe_fleche)[5]<=250   :
            break
        elif 670 <= canevas.coords(pointe_fleche)[4] <= 700 and 50 <= canevas.coords(pointe_fleche)[5] <= 150:
            if pv_ennemi1 != 0 :
                vie_ennemi(1)
                canevas.delete(fleche, pointe_fleche)
                break
        elif 570 <= canevas.coords(pointe_fleche)[4] <= 600 and 300 <= canevas.coords(pointe_fleche)[5] <= 400:
            if pv_ennemi2 != 0:
                vie_ennemi(2)
                canevas.delete(fleche, pointe_fleche)
                break
    x_fleche,y_fleche=150,550
    lancer_v=0
    info.config(text="Il vous reste "+ str(nb_fleche)+" fleche(s)")
    if nb_fleche > 0:
        rotation_fleche(x_fleche,y_fleche)

def lancer_niveau2():
    """fonction qui permet de lancer la fleche sur un axe horizontal et qui prepare une nouvelle fleche a lancer"""
    global x_fleche,y_fleche,lancer_v,angle,nb_fleche,fleche,pointe_fleche
    lancer_v = 1
    nb_fleche -= 1
    t = 0
    while x_fleche < 1000 and y_fleche < 1000 and x_fleche > 0 and y_fleche > 0:
        x_fleche += 4 * (1 / 2 * (9.8) + 2 * cos(radians(angle)))
        y_fleche += -4 * (2 * cos(radians(angle)) * t)
        canevas.delete(fleche, pointe_fleche)
        fleche = canevas.create_line(x_fleche - 60, y_fleche, x_fleche - 10, y_fleche, fill="yellow", width=3)
        pointe_fleche = canevas.create_polygon(x_fleche - 10, y_fleche - 10, x_fleche - 10, y_fleche + 10, x_fleche,
                                               y_fleche, fill="yellow", width=3)
        if not (0<canevas.coords(pointe_fleche)[4]<1000) or not(0<canevas.coords(pointe_fleche)[5]<650):
            break
        elif 500<=canevas.coords(pointe_fleche)[4]<=700 and 450<=canevas.coords(pointe_fleche)[5]<=500 :
            break
        elif 600<=canevas.coords(pointe_fleche)[4]<=800 and 200<=canevas.coords(pointe_fleche)[5]<=250   :
            break
        elif 670 <= canevas.coords(pointe_fleche)[4] <= 700 and 50 <= canevas.coords(pointe_fleche)[5] <= 150:
            if pv_ennemi1 != 0 :
                vie_ennemi(1)
                canevas.delete(fleche, pointe_fleche)
                break
        elif 570 <= canevas.coords(pointe_fleche)[4] <= 600 and 300 <= canevas.coords(pointe_fleche)[5] <= 400:
            if pv_ennemi2 != 0:
                vie_ennemi(2)
                canevas.delete(fleche, pointe_fleche)
                break
        t += 1
        angle -= 2
        time.sleep(0.1)
        fenetre.update()
    x_fleche,y_fleche=150,550
    lancer_v=0
    info.config(text="Il vous reste "+ str(nb_fleche)+" fleche(s)")
    if nb_fleche > 0:
        rotation_fleche(x_fleche,y_fleche)

def niveau1():
    global canevas,fenetre,info,lancer_v,nb_fleche,pv_ennemi1,pv_ennemi2,x_fleche,y_fleche,Pv_ennemi1_line,Pv_ennemi2_line,ennemi1,ennemi2
    fenetre = Tk()
    fenetre.config(width=1000, height=700)
    canevas = Canvas(fenetre, width=1000, height=700)
    canevas.place(x=0, y=0)
    fond = PhotoImage(file="foret.png")
    ennemi = PhotoImage(file="ennemi.png")
    fond_place = canevas.create_image(500, 300, image=fond)
    personnage = PhotoImage(file="personnage.png")

    personnage_place = canevas.create_image(80, 550, image=personnage)
    ennemi1 = canevas.create_image(700, 110, image=ennemi)
    ennemi2 = canevas.create_image(600, 360, image=ennemi)
    plateforme1 = canevas.create_rectangle(600, 200, 800, 250, fill="black")
    plateforme2 = canevas.create_rectangle(500, 450, 700, 500, fill="black")
    plateforme3 = canevas.create_rectangle(0, 600, 200, 650, fill="black")

    PV = pv_ennemi1 = pv_ennemi2 = 100
    Pv_ennemi1_line = canevas.create_line(600, 20, 600 + PV * 2, 20, fill="red", width=5)
    Pv_ennemi2_line = canevas.create_line(500, 270, 500 + PV * 2, 270, fill="red", width=5)

    nb_fleche = 30
    bouton_lancer = Button(fenetre, text="Lancer", font=("calibri", 20, "normal"), bg="white", fg="red", command=lancer_niveau1)
    bouton_lancer.place(x=300, y=590)
    info = Label(fenetre, text="Il vous reste " + str(nb_fleche) + " fleche(s)", fg='white', bg="green",
                     font=('times', 20, 'bold'))
    info.place(x=150, y=0)
    x_fleche, y_fleche = 150, 550
    lancer_v = 0
    rotation_fleche(x_fleche, y_fleche)

    fenetre.mainloop()

def niveau2():
    global canevas,fenetre,info,lancer_v,nb_fleche,pv_ennemi1,pv_ennemi2,x_fleche,y_fleche,Pv_ennemi1_line,Pv_ennemi2_line,ennemi1,ennemi2
    fenetre = Tk()
    fenetre.config(width=1000, height=700)
    canevas = Canvas(fenetre, width=1000, height=700)
    canevas.place(x=0, y=0)
    fond = PhotoImage(file="usine.png")
    ennemi = PhotoImage(file="ennemi.png")
    fond_place = canevas.create_image(500, 300, image=fond)
    personnage = PhotoImage(file="personnage.png")

    personnage_place = canevas.create_image(80, 550, image=personnage)
    ennemi1 = canevas.create_image(700, 110, image=ennemi)
    ennemi2 = canevas.create_image(600, 360, image=ennemi)
    plateforme1 = canevas.create_rectangle(600, 200, 800, 250, fill="black")
    plateforme2 = canevas.create_rectangle(500, 450, 700, 500, fill="black")
    plateforme3 = canevas.create_rectangle(0, 600, 200, 650, fill="black")

    PV = pv_ennemi1 = pv_ennemi2 = 100
    Pv_ennemi1_line = canevas.create_line(600, 20, 600 + PV * 2, 20, fill="red", width=5)
    Pv_ennemi2_line = canevas.create_line(500, 270, 500 + PV * 2, 270, fill="red", width=5)

    nb_fleche = 30
    bouton_lancer = Button(fenetre, text="Lancer", font=("calibri", 20, "normal"), bg="white", fg="red", command=lancer_niveau2)
    bouton_lancer.place(x=300, y=590)
    info = Label(fenetre, text="Il vous reste " + str(nb_fleche) + " fleche(s)", fg='white', bg="green",
                     font=('times', 20, 'bold'))
    info.place(x=150, y=0)
    x_fleche, y_fleche = 150, 550
    lancer_v = 0
    rotation_fleche(x_fleche, y_fleche)
    fenetre.mainloop()
    
def selectionner_carte(carte):
    def selection():
        if carte=="Enchanted forest":
            print(f"You have selected the map {carte}. The game begins !")
            root.destroy()
            niveau1()
        elif carte=="Factory":
            print(f"You have selected the map {carte}. The game begins !")
            root.destroy()
            niveau2()

    return selection

def creer_btn(root, texte):
    style = ttk.Style()
    style.configure('TButton', font=('Helvetica bold', 20), borderwidth=50)
    style.map('TButton', foreground=[('active', 'light green')])
    if texte == 'Play':
        btn = ttk.Button(root, text=texte, command=lambda: choix_carte(root, btn), style='TButton')
        root.quit()
    else:
        btn = ttk.Button(root, text=texte, command=root.destroy, style='TButton')
    btn.pack(pady=10)

def choix_carte(root, btn):
    btn.pack_forget()
    choose =Label(root, text="Choose a map:", font=("Helvetica bold", 30), background="light green")
    choose.pack(pady=10)
    cartes = ["Enchanted forest", "Factory"]
    for i, carte in enumerate(cartes):
        choisir = Button(root, text=carte, width=20, height=3, font=("Helvetica bold", 20), fg="black", bd=0,
                            command=selectionner_carte(carte))
        choisir.pack(pady=10)

def main():
    global root
    root = Tk()
    root.title("Bowmaster")
    root.geometry("1450x887")
    image1 = PhotoImage(file="menujeu1.png")
    fond = Label(root, image=image1)
    fond.place(relheight=1, relwidth=1)
    welcome =Label(root, text="Welcome to Bowmaster !", font=("Helvetica bold", 40), background="light green")
    welcome.pack(pady=120)
    creer_btn(root, 'Play')
    creer_btn(root, 'Exit')
    root.mainloop()

main()
